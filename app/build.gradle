apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'androidx.navigation.safeargs.kotlin' // for kotlin safeargs only. For java & kotlin use "androidx.navigation.safeargs"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.testjetpack"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'API_BASE_URL', '"https://test.com"'
            buildConfigField 'String', 'API_GIT_URL', '"https://api.github.com/"'
            buildConfigField 'String', 'DB_NAME', '"appDb"'
        }

        debug {
            buildConfigField 'String', 'API_BASE_URL', '"https://test.com"'
            buildConfigField 'String', 'API_GIT_URL', '"https://api.github.com/"'
            buildConfigField 'String', 'DB_NAME', '"appDb"'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.0"
    api "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Koin
    def koin_version = '2.0.0-rc-2'
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"

    // AndroidX
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha04'
    implementation 'androidx.core:core-ktx:1.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha5'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-alpha04'
    implementation 'androidx.fragment:fragment:1.1.0-alpha07'

    // Material
    implementation 'com.google.android.material:material:1.1.0-alpha05'

    // DataBinding
    kapt 'com.android.databinding:compiler:3.2.0-alpha10'

    // Architecture components
    def arch_version = '2.1.0-alpha04'
    implementation "androidx.lifecycle:lifecycle-runtime:$arch_version"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$arch_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$arch_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$arch_version"

    // Navigation
    def nav_version = "2.1.0-alpha02"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Room
    def room_version = "2.1.0-alpha07"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // Paging
    def paging_version = "2.1.0"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    // WorkManager
    def work_version = "2.0.1"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // Retrofit
    def retrofit_version = '2.5.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    // Ok http
    def ok_http_version = '3.14.0'
    implementation "com.squareup.okhttp3:logging-interceptor:$ok_http_version"

    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    // Location
    implementation 'com.google.android.gms:play-services-location:16.0.0'

    // Google Maps
    implementation 'com.google.android.gms:play-services-maps:16.1.0'

    // Arch Chart
    implementation 'com.github.imaNNeoFighT:ArcChartView:1.0.3.1'

    // Layout hide
    implementation('com.github.christophesmet:android_maskable_layout:v1.3.1') {
        exclude group: 'com.intellij', module: 'annotations'
    }

    //testing

    testImplementation 'junit:junit:4.12'

    // AndroidJUnitRunner and JUnit Rules
    def junit_version = '1.2.0-alpha05'
    androidTestImplementation "androidx.test:runner:$junit_version"
    androidTestImplementation "androidx.test:rules:$junit_version"
    implementation "androidx.test:monitor:$junit_version"
    implementation "androidx.test:monitor:1.1.1"

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'

    // Espresso dependencies
    def espresso_version = '3.2.0-alpha04'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espresso_version"


    debugImplementation 'androidx.fragment:fragment-testing:1.1.0-alpha07'
}
