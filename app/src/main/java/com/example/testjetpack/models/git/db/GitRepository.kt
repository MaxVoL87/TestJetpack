package com.example.testjetpack.models.git.db

import androidx.room.*
import com.google.gson.annotations.SerializedName

@Entity(tableName = "repository_table", indices = [Index(value = ["index_in_response"])])
data class GitRepository(
    @SerializedName("stargazers_count") @ColumnInfo(name = "stargazers_count") val stargazersCount: Int,
    @SerializedName("pushed_at") @ColumnInfo(name = "pushed_at") val pushedAt: String,
    @SerializedName("subscription_url") @ColumnInfo(name = "subscription_url") val subscriptionUrl: String?,
    @SerializedName("language") @ColumnInfo(name = "language") val language: String?,
    @SerializedName("branches_url") @ColumnInfo(name = "branches_url") val branchesUrl: String?,
    @SerializedName("issue_comment_url") @ColumnInfo(name = "issue_comment_url") val issueCommentUrl: String?,
    @SerializedName("labels_url") @ColumnInfo(name = "labels_url") val labelsUrl: String?,
    @SerializedName("score") @ColumnInfo(name = "score") val score: Double,
    @SerializedName("subscribers_url") @ColumnInfo(name = "subscribers_url") val subscribersUrl: String?,
    @SerializedName("releases_url") @ColumnInfo(name = "releases_url") val releasesUrl: String?,
    @SerializedName("svn_url") @ColumnInfo(name = "svn_url") val svnUrl: String,
    @SerializedName("id") @ColumnInfo(name = "id") val id: Long,
    @SerializedName("forks") @ColumnInfo(name = "forks") val forks: Int,
    @SerializedName("archive_url") @ColumnInfo(name = "archive_url") val archiveUrl: String?,
    @SerializedName("git_refs_url") @ColumnInfo(name = "git_refs_url") val gitRefsUrl: String?,
    @SerializedName("forks_url") @ColumnInfo(name = "forks_url") val forksUrl: String?,
    @SerializedName("statuses_url") @ColumnInfo(name = "statuses_url") val statusesUrl: String?,
    @SerializedName("ssh_url") @ColumnInfo(name = "ssh_url") val sshUrl: String?,
    @SerializedName("license_name") @ColumnInfo(name = "license_name") val licenseName: String?,
    @SerializedName("full_name") @ColumnInfo(name = "full_name") val fullName: String?,
    @SerializedName("size") @ColumnInfo(name = "size") val size: Int,
    @SerializedName("languages_url") @ColumnInfo(name = "languages_url") val languagesUrl: String?,
    @SerializedName("html_url") @ColumnInfo(name = "html_url") val htmlUrl: String?,
    @SerializedName("collaborators_url") @ColumnInfo(name = "collaborators_url") val collaboratorsUrl: String?,
    @SerializedName("clone_url") @ColumnInfo(name = "clone_url") val cloneUrl: String?,
    @SerializedName("name") @ColumnInfo(name = "name") val name: String,
    @SerializedName("pulls_url") @ColumnInfo(name = "pulls_url") val pullsUrl: String?,
    @SerializedName("default_branch") @ColumnInfo(name = "default_branch") val defaultBranch: String?,
    @SerializedName("hooks_url") @ColumnInfo(name = "hooks_url") val hooksUrl: String?,
    @SerializedName("trees_url") @ColumnInfo(name = "trees_url") val treesUrl: String?,
    @SerializedName("tags_url") @ColumnInfo(name = "tags_url") val tagsUrl: String?,
    @SerializedName("private") @ColumnInfo(name = "private") val privateRepo: Boolean,
    @SerializedName("contributors_url") @ColumnInfo(name = "contributors_url") val contributorsUrl: String?,
    @SerializedName("has_downloads") @ColumnInfo(name = "has_downloads") val hasDownloads: Boolean,
    @SerializedName("notifications_url") @ColumnInfo(name = "notifications_url") val notificationsUrl: String?,
    @SerializedName("open_issues_count") @ColumnInfo(name = "open_issues_count") val openIssuesCount: Int,
    @SerializedName("description") @ColumnInfo(name = "description") val description: String?,
    @SerializedName("created_at") @ColumnInfo(name = "created_at") val createdAt: String?,
    @SerializedName("watchers") @ColumnInfo(name = "watchers") val watchers: Int,
    @SerializedName("keys_url") @ColumnInfo(name = "keys_url") val keysUrl: String?,
    @SerializedName("deployments_url") @ColumnInfo(name = "deployments_url") val deploymentsUrl: String?,
    @SerializedName("has_projects") @ColumnInfo(name = "has_projects") val hasProjects: Boolean,
    @SerializedName("archived") @ColumnInfo(name = "archived") val archived: Boolean,
    @SerializedName("has_wiki") @ColumnInfo(name = "has_wiki") val hasWiki: Boolean,
    @SerializedName("updated_at") @ColumnInfo(name = "updated_at") val updatedAt: String?,
    @SerializedName("comments_url") @ColumnInfo(name = "comments_url") val commentsUrl: String?,
    @SerializedName("stargazers_url") @ColumnInfo(name = "stargazers_url") val stargazersUrl: String?,
    @SerializedName("git_url") @ColumnInfo(name = "git_url") val gitUrl: String?,
    @SerializedName("has_pages") @ColumnInfo(name = "has_pages") val hasPages: Boolean,
    @SerializedName("owner_id") @ColumnInfo(name = "owner_id") val ownerId: Long,
    @SerializedName("commits_url") @ColumnInfo(name = "commits_url") val commitsUrl: String?,
    @SerializedName("compare_url") @ColumnInfo(name = "compare_url") val compareUrl: String?,
    @SerializedName("git_commits_url") @ColumnInfo(name = "git_commits_url") val gitCommitsUrl: String?,
    @SerializedName("blobs_url") @ColumnInfo(name = "blobs_url") val blobsUrl: String?,
    @SerializedName("git_tags_url") @ColumnInfo(name = "git_tags_url") val gitTagsUrl: String?,
    @SerializedName("merges_url") @ColumnInfo(name = "merges_url") val mergesUrl: String?,
    @SerializedName("downloads_url") @ColumnInfo(name = "downloads_url") val downloadsUrl: String?,
    @SerializedName("has_issues") @ColumnInfo(name = "has_issues") val hasIssues: Boolean,
    @SerializedName("url") @ColumnInfo(name = "url") val url: String,
    @SerializedName("contents_url") @ColumnInfo(name = "contents_url") val contentsUrl: String?,
    @SerializedName("mirror_url") @ColumnInfo(name = "mirror_url") val mirrorUrl: String?,
    @SerializedName("milestones_url") @ColumnInfo(name = "milestones_url") val milestonesUrl: String?,
    @SerializedName("teams_url") @ColumnInfo(name = "teams_url") val teamsUrl: String?,
    @SerializedName("fork") @ColumnInfo(name = "fork") val fork: Boolean,
    @SerializedName("issues_url") @ColumnInfo(name = "issues_url") val issuesUrl: String?,
    @SerializedName("events_url") @ColumnInfo(name = "events_url") val eventsUrl: String?,
    @SerializedName("issue_events_url") @ColumnInfo(name = "issue_events_url") val issueEventsUrl: String?,
    @SerializedName("assignees_url") @ColumnInfo(name = "assignees_url") val assigneesUrl: String?,
    @SerializedName("open_issues") @ColumnInfo(name = "open_issues") val openIssues: Int,
    @SerializedName("watchers_count") @ColumnInfo(name = "watchers_count") val watchersCount: Int,
    @SerializedName("node_id") @ColumnInfo(name = "node_id") val nodeId: String?,
    @SerializedName("homepage") @ColumnInfo(name = "homepage") val homepage: String?,
    @SerializedName("forks_count") @ColumnInfo(name = "forks_count") val forksCount: Int,

    // to be consistent w/ changing backend order, we need to keep a data like this
    @SerializedName("index_in_response") @ColumnInfo(name = "index_in_response") @PrimaryKey(autoGenerate = false) val indexInResponse: Int = -1
)